<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="14" passed="13" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-12-17T13:42:43 EST" name="TtorialsNinja Automation Suite" finished-at="2023-12-17T13:44:06 EST" duration-ms="83454">
    <groups>
    </groups>
    <test started-at="2023-12-17T13:42:43 EST" name="TutorialsNinja Tests" finished-at="2023-12-17T13:44:06 EST" duration-ms="83454">
      <class name="com.tutorialsNinjaQA.testcases.RegisterTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsNinjaQA.testcases.RegisterTest@3ce1e309]" started-at="2023-12-17T13:43:41 EST" name="setup" finished-at="2023-12-17T13:43:46 EST" duration-ms="4928" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyRegisteringAccountWithMandatoryField()[pri:1, instance:com.tutorialsNinjaQA.testcases.RegisterTest@3ce1e309]" started-at="2023-12-17T13:43:46 EST" name="verifyRegisteringAccountWithMandatoryField" finished-at="2023-12-17T13:43:47 EST" duration-ms="1587" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegisteringAccountWithMandatoryField -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:com.tutorialsNinjaQA.testcases.RegisterTest@3ce1e309]" started-at="2023-12-17T13:43:47 EST" name="teardown" finished-at="2023-12-17T13:43:48 EST" duration-ms="189" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsNinjaQA.testcases.RegisterTest@3ce1e309]" started-at="2023-12-17T13:43:48 EST" name="setup" finished-at="2023-12-17T13:43:52 EST" duration-ms="4784" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyRegisteringAccountByProvidingAllFields()[pri:2, instance:com.tutorialsNinjaQA.testcases.RegisterTest@3ce1e309]" started-at="2023-12-17T13:43:52 EST" name="verifyRegisteringAccountByProvidingAllFields" finished-at="2023-12-17T13:43:54 EST" duration-ms="1692" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegisteringAccountByProvidingAllFields -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:com.tutorialsNinjaQA.testcases.RegisterTest@3ce1e309]" started-at="2023-12-17T13:43:54 EST" name="teardown" finished-at="2023-12-17T13:43:54 EST" duration-ms="177" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsNinjaQA.testcases.RegisterTest@3ce1e309]" started-at="2023-12-17T13:43:54 EST" name="setup" finished-at="2023-12-17T13:43:59 EST" duration-ms="4702" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyingRegisteringAccountWithExistingEmailAddress()[pri:3, instance:com.tutorialsNinjaQA.testcases.RegisterTest@3ce1e309]" started-at="2023-12-17T13:43:59 EST" name="verifyingRegisteringAccountWithExistingEmailAddress" finished-at="2023-12-17T13:44:00 EST" duration-ms="1083" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyingRegisteringAccountWithExistingEmailAddress -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:com.tutorialsNinjaQA.testcases.RegisterTest@3ce1e309]" started-at="2023-12-17T13:44:00 EST" name="teardown" finished-at="2023-12-17T13:44:00 EST" duration-ms="215" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsNinjaQA.testcases.RegisterTest@3ce1e309]" started-at="2023-12-17T13:44:00 EST" name="setup" finished-at="2023-12-17T13:44:05 EST" duration-ms="4786" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyRegisteringAccountWithoutFillingAnyDetails()[pri:4, instance:com.tutorialsNinjaQA.testcases.RegisterTest@3ce1e309]" started-at="2023-12-17T13:44:05 EST" name="verifyRegisteringAccountWithoutFillingAnyDetails" finished-at="2023-12-17T13:44:06 EST" duration-ms="679" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at com.tutorialsNinjaQA.testcases.RegisterTest.verifyRegisteringAccountWithoutFillingAnyDetails(RegisterTest.java:70)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegisteringAccountWithoutFillingAnyDetails -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:com.tutorialsNinjaQA.testcases.RegisterTest@3ce1e309]" started-at="2023-12-17T13:44:06 EST" name="teardown" finished-at="2023-12-17T13:44:06 EST" duration-ms="139" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- com.tutorialsNinjaQA.testcases.RegisterTest -->
      <class name="com.tutorialsNinjaQA.testcases.SearchTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsNinjaQA.testcases.SearchTest@71809907]" started-at="2023-12-17T13:43:26 EST" name="setup" finished-at="2023-12-17T13:43:30 EST" duration-ms="3907" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyingSearchWithValidProduct()[pri:1, instance:com.tutorialsNinjaQA.testcases.SearchTest@71809907]" started-at="2023-12-17T13:43:30 EST" name="verifyingSearchWithValidProduct" finished-at="2023-12-17T13:43:31 EST" duration-ms="817" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyingSearchWithValidProduct -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:com.tutorialsNinjaQA.testcases.SearchTest@71809907]" started-at="2023-12-17T13:43:31 EST" name="teardown" finished-at="2023-12-17T13:43:31 EST" duration-ms="182" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsNinjaQA.testcases.SearchTest@71809907]" started-at="2023-12-17T13:43:31 EST" name="setup" finished-at="2023-12-17T13:43:35 EST" duration-ms="4171" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyingSearchWithInvalidProduct()[pri:2, instance:com.tutorialsNinjaQA.testcases.SearchTest@71809907]" started-at="2023-12-17T13:43:35 EST" name="verifyingSearchWithInvalidProduct" finished-at="2023-12-17T13:43:36 EST" duration-ms="657" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyingSearchWithInvalidProduct -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:com.tutorialsNinjaQA.testcases.SearchTest@71809907]" started-at="2023-12-17T13:43:36 EST" name="teardown" finished-at="2023-12-17T13:43:36 EST" duration-ms="190" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsNinjaQA.testcases.SearchTest@71809907]" started-at="2023-12-17T13:43:36 EST" name="setup" finished-at="2023-12-17T13:43:40 EST" duration-ms="4320" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyingSearchWithoutAnyProduct()[pri:3, instance:com.tutorialsNinjaQA.testcases.SearchTest@71809907]" started-at="2023-12-17T13:43:40 EST" name="verifyingSearchWithoutAnyProduct" finished-at="2023-12-17T13:43:41 EST" duration-ms="512" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyingSearchWithoutAnyProduct -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:com.tutorialsNinjaQA.testcases.SearchTest@71809907]" started-at="2023-12-17T13:43:41 EST" name="teardown" finished-at="2023-12-17T13:43:41 EST" duration-ms="180" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- com.tutorialsNinjaQA.testcases.SearchTest -->
      <class name="com.tutorialsNinjaQA.testcases.LoginTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsNinjaQA.testcases.LoginTest@3c407114]" started-at="2023-12-17T13:42:44 EST" name="setup" finished-at="2023-12-17T13:42:50 EST" duration-ms="6187" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyLoginWithValidCredentials(java.lang.String,java.lang.String)[pri:1, instance:com.tutorialsNinjaQA.testcases.LoginTest@3c407114]" started-at="2023-12-17T13:42:50 EST" name="verifyLoginWithValidCredentials" data-provider="supplyTestData" finished-at="2023-12-17T13:42:51 EST" duration-ms="1095" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[mohammadadi440@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Anik12345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithValidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tutorialsNinjaQA.testcases.LoginTest@3c407114]" started-at="2023-12-17T13:42:51 EST" name="tearDown" finished-at="2023-12-17T13:42:51 EST" duration-ms="182" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsNinjaQA.testcases.LoginTest@3c407114]" started-at="2023-12-17T13:42:51 EST" name="setup" finished-at="2023-12-17T13:42:56 EST" duration-ms="4693" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyLoginWithValidCredentials(java.lang.String,java.lang.String)[pri:1, instance:com.tutorialsNinjaQA.testcases.LoginTest@3c407114]" started-at="2023-12-17T13:42:56 EST" name="verifyLoginWithValidCredentials" data-provider="supplyTestData" finished-at="2023-12-17T13:42:57 EST" duration-ms="1303" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[amotooricap1@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithValidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tutorialsNinjaQA.testcases.LoginTest@3c407114]" started-at="2023-12-17T13:42:57 EST" name="tearDown" finished-at="2023-12-17T13:42:57 EST" duration-ms="205" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsNinjaQA.testcases.LoginTest@3c407114]" started-at="2023-12-17T13:42:57 EST" name="setup" finished-at="2023-12-17T13:43:02 EST" duration-ms="4791" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyLoginWithValidCredentials(java.lang.String,java.lang.String)[pri:1, instance:com.tutorialsNinjaQA.testcases.LoginTest@3c407114]" started-at="2023-12-17T13:43:02 EST" name="verifyLoginWithValidCredentials" data-provider="supplyTestData" finished-at="2023-12-17T13:43:04 EST" duration-ms="1776" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[amotooricap3@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithValidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tutorialsNinjaQA.testcases.LoginTest@3c407114]" started-at="2023-12-17T13:43:04 EST" name="tearDown" finished-at="2023-12-17T13:43:04 EST" duration-ms="196" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsNinjaQA.testcases.LoginTest@3c407114]" started-at="2023-12-17T13:43:04 EST" name="setup" finished-at="2023-12-17T13:43:09 EST" duration-ms="4484" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyLoginWithInvalidCredentials()[pri:2, instance:com.tutorialsNinjaQA.testcases.LoginTest@3c407114]" started-at="2023-12-17T13:43:09 EST" name="verifyLoginWithInvalidCredentials" finished-at="2023-12-17T13:43:10 EST" duration-ms="848" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithInvalidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tutorialsNinjaQA.testcases.LoginTest@3c407114]" started-at="2023-12-17T13:43:10 EST" name="tearDown" finished-at="2023-12-17T13:43:10 EST" duration-ms="205" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsNinjaQA.testcases.LoginTest@3c407114]" started-at="2023-12-17T13:43:10 EST" name="setup" finished-at="2023-12-17T13:43:14 EST" duration-ms="4495" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyingWithInvalidEmailAndValidPassword()[pri:3, instance:com.tutorialsNinjaQA.testcases.LoginTest@3c407114]" started-at="2023-12-17T13:43:14 EST" name="verifyingWithInvalidEmailAndValidPassword" finished-at="2023-12-17T13:43:15 EST" duration-ms="815" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyingWithInvalidEmailAndValidPassword -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tutorialsNinjaQA.testcases.LoginTest@3c407114]" started-at="2023-12-17T13:43:15 EST" name="tearDown" finished-at="2023-12-17T13:43:15 EST" duration-ms="179" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsNinjaQA.testcases.LoginTest@3c407114]" started-at="2023-12-17T13:43:15 EST" name="setup" finished-at="2023-12-17T13:43:20 EST" duration-ms="4546" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyingLoginWithValidEmailAndInvalidPassword()[pri:4, instance:com.tutorialsNinjaQA.testcases.LoginTest@3c407114]" started-at="2023-12-17T13:43:20 EST" name="verifyingLoginWithValidEmailAndInvalidPassword" finished-at="2023-12-17T13:43:21 EST" duration-ms="816" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyingLoginWithValidEmailAndInvalidPassword -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tutorialsNinjaQA.testcases.LoginTest@3c407114]" started-at="2023-12-17T13:43:21 EST" name="tearDown" finished-at="2023-12-17T13:43:21 EST" duration-ms="243" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsNinjaQA.testcases.LoginTest@3c407114]" started-at="2023-12-17T13:43:21 EST" name="setup" finished-at="2023-12-17T13:43:25 EST" duration-ms="4412" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyingLoginWithoutProvidingCredentials()[pri:5, instance:com.tutorialsNinjaQA.testcases.LoginTest@3c407114]" started-at="2023-12-17T13:43:25 EST" name="verifyingLoginWithoutProvidingCredentials" finished-at="2023-12-17T13:43:26 EST" duration-ms="561" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyingLoginWithoutProvidingCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tutorialsNinjaQA.testcases.LoginTest@3c407114]" started-at="2023-12-17T13:43:26 EST" name="tearDown" finished-at="2023-12-17T13:43:26 EST" duration-ms="177" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.tutorialsNinjaQA.testcases.LoginTest -->
    </test> <!-- TutorialsNinja Tests -->
  </suite> <!-- TtorialsNinja Automation Suite -->
</testng-results>
